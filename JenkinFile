pipeline{
    agent any
        stages{
            stage('SCM Checkout'){
                steps{
                    git branch: 'main', url: 'https://github.com/mukeshjava92/demo_counter_app.git'
                }
            }
            stage('Unit Testing'){
                steps{
                   sh 'mvn test'
                }
            }
            stage('Integration Testing'){
                steps{
                   sh 'mvn verify -DskipUnitTests'
                }
            }
            stage('Maven Build'){
                steps{
                   sh 'mvn clean install '
                }
            }
              stage('Sonarqube analysis'){
                steps{
                  script{
                         withSonarQubeEnv(credentialsId: 'sonarqube') {
                         sh ' mvn clean package sonar:sonar'
                       }
                   } 
                }
            }
            stage('Quality Gate Analysis'){
                steps{
                  script{
                      waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube'
                   } 
                }
            }
            stage('Push Artifact to Nexus Repo'){
                steps{
                 script{

                  def readPomVersion = readMavenPom file: 'pom.xml'
                  def nexusRepo = readPomVersion.version.endsWith("SNAPSHOT") ? "springboot_new_snashot" : "demo_sprintboot"
                  nexusArtifactUploader artifacts: [
                    [artifactId: 'springboot',
                     classifier: '', 
                     file: 'target/Uber.jar', 
                     type: 'jar']
                     ],
                      credentialsId: 'nexus-auth',
                       groupId: 'com.example',
                       nexusUrl: '65.2.123.116:8081',
                       nexusVersion: 'nexus3', 
                       protocol: 'http',
                       repository: 'nexusRepo',
                       version: "${readPomVersion.version}"
                 }
                }
            }
        }
}